{"version":3,"sources":["webpack:///./src/components/FormComponent.js","webpack:///./src/pages/index.js"],"names":["FormikApp","withFormik","mapPropsToValues","hashtag","hashtagSearchResult","validationSchema","Yup","shape","required","handleSubmit","_handleSubmit","regenerator_default","a","mark","_callee","values","_ref2","setSubmitting","url","searchHashtags","removeDuplicates","c","hts","ht","hashtagResult","wrap","_context","prev","next","htmlData","match","regex","matches","exec","push","arr","newArr","tags","map","ele","indexOf","i","axios","get","sent","data","stop","_x","_x2","apply","this","arguments","_ref","errors","react_default","createElement","formik_esm","className","type","name","index_esm","IndexPage","components_FormComponent"],"mappings":"gVAMA,IAkEeA,EAhDGC,YAAW,CAC3BC,iBAD2B,WAEzB,MAAO,CACLC,QAAS,GACTC,oBAAqB,KAGzBC,iBAAkBC,WAAaC,MAAM,CACnCJ,QAASG,WAAaE,aAElBC,aAVqB,iBAAAC,KAAAC,EAAAC,EAAAC,KAAA,SAAAC,EAURC,EAVQC,GAAA,IAAAC,EAAAd,EAAAe,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAb,EAAAC,EAAAa,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAUEX,EAVFD,EAUEC,gBACb,GACVd,EAAUY,EAAOZ,QACjBe,EAAM,0CAA4Cf,EAAU,IAC1DgB,EAAiB,SAAAU,GAIrB,IAHA,IAEIC,EAFAC,EAAQ,+BACRC,EAAU,GAENF,EAAQC,EAAME,KAAKJ,IACzBG,EAAQE,KAAKJ,EAAM,IAErB,OAAOE,GAGHZ,EAAmB,SAAAe,GACvB,IAAIC,EAAS,GACTC,EAAO,GACXF,EAAIG,IAAI,SAAAC,IACuB,IAAzBH,EAAOI,QAAQD,IACjBH,EAAOF,KAAKK,KAGhB,IAAK,IAAIE,EAAI,EAAGA,EAAI,GAAIA,IACtBJ,EAAKH,KAAKE,EAAOK,IAEnB,OAAOJ,GAnCgBX,EAAAE,KAAA,EAsCTc,IAAMC,IAAIzB,GAtCD,OAsCnBG,EAtCmBK,EAAAkB,KAuCrBtB,EAAMH,EAAeE,EAAEwB,MACvBtB,EAAKH,EAAiBE,GACtBE,EAAgBD,EAAGe,IAAI,SAAAC,GAAG,MAAI,IAAMA,EAAM,MAC9CxB,EAAOX,oBAAsBoB,EAE7BP,GAAc,GA5CW,yBAAAS,EAAAoB,SAAAhC,kLAAA,gBAAAiC,EAAAC,GAAA,OAAAtC,EAAAuC,MAAAC,KAAAC,YAAA,IAAXlD,CAlBI,SAAAmD,GAAA,IAAGrC,EAAHqC,EAAGrC,OAAQsC,EAAXD,EAAWC,OAAX,OACpBC,EAAA1C,EAAA2C,cAAA,WACED,EAAA1C,EAAA2C,cAACC,EAAA,EAAD,KACEF,EAAA1C,EAAA2C,cAAA,mBACAD,EAAA1C,EAAA2C,cAACC,EAAA,EAAD,CAAOC,UAAU,eAAeC,KAAK,OAAOC,KAAK,YACjDL,EAAA1C,EAAA2C,cAAA,UAAQE,UAAU,YAAYC,KAAK,UACjCJ,EAAA1C,EAAA2C,cAACK,EAAA,EAAD,OAEFN,EAAA1C,EAAA2C,cAAA,aACGF,EAAOlD,SACNmD,EAAA1C,EAAA2C,cAAA,KAAGE,UAAU,gBAAb,8BAINH,EAAA1C,EAAA2C,cAAA,KAAGE,UAAU,gBAAgB1C,EAAOX,+BCAzByD,UAfG,WAChB,OACEP,EAAA1C,EAAA2C,cAAA,OAAKE,UAAU,UACbH,EAAA1C,EAAA2C,cAAA,UACED,EAAA1C,EAAA2C,cAACK,EAAA,EAAD,CAAaH,UAAU,WADzB,iBAGAH,EAAA1C,EAAA2C,cAAA,yFAIAD,EAAA1C,EAAA2C,cAACO,EAAD","file":"component---src-pages-index-js-a6af83d0d9c56ffb71e5.js","sourcesContent":["import React from \"react\"\nimport { withFormik, Form, Field } from \"formik\"\nimport * as Yup from \"yup\"\nimport axios from \"axios\"\nimport { FaSearch } from \"react-icons/fa\"\n\nconst FormComponent = ({ values, errors }) => (\n  <div>\n    <Form>\n      <label># </label>\n      <Field className=\"HashtagInput\" type=\"text\" name=\"hashtag\" />\n      <button className=\"SearchBtn\" type=\"submit\">\n        <FaSearch />\n      </button>\n      <small>\n        {errors.hashtag && (\n          <p className=\"ErrorMessage\">You must enter a Hashtag</p>\n        )}\n      </small>\n    </Form>\n    <p className=\"SearchResult\">{values.hashtagSearchResult}</p>\n  </div>\n)\n\nconst FormikApp = withFormik({\n  mapPropsToValues() {\n    return {\n      hashtag: \"\",\n      hashtagSearchResult: [],\n    }\n  },\n  validationSchema: Yup.object().shape({\n    hashtag: Yup.string().required(),\n  }),\n  async handleSubmit(values, { setSubmitting }) {\n    setSubmitting(true)\n    let hashtag = values.hashtag\n    let url = \"https://www.instagram.com/explore/tags/\" + hashtag + \"/\"\n    const searchHashtags = htmlData => {\n      let regex = /(?:^|\\s)(?:#)([a-zA-Z\\d]+)/gm\n      let matches = []\n      let match\n      while ((match = regex.exec(htmlData))) {\n        matches.push(match[1])\n      }\n      return matches\n    }\n\n    const removeDuplicates = arr => {\n      let newArr = []\n      let tags = []\n      arr.map(ele => {\n        if (newArr.indexOf(ele) === -1) {\n          newArr.push(ele)\n        }\n      })\n      for (let i = 0; i < 20; i++) {\n        tags.push(newArr[i])\n      }\n      return tags\n    }\n\n    const c = await axios.get(url)\n    let hts = searchHashtags(c.data)\n    let ht = removeDuplicates(hts)\n    let hashtagResult = ht.map(ele => \"#\" + ele + \" \")\n    values.hashtagSearchResult = hashtagResult\n\n    setSubmitting(false)\n  },\n})(FormComponent)\n\nexport default FormikApp\n","import React from \"react\"\nimport { FaInstagram } from \"react-icons/fa\"\nimport FormikApp from \"../components/FormComponent\"\nimport \"../styles/layout.scss\"\n\nconst IndexPage = () => {\n  return (\n    <div className=\"Layout\">\n      <h1>\n        <FaInstagram className=\"IGIcon\" /> Top Hashtags\n      </h1>\n      <p>\n        Type a hashtag and search. It results you top 20 related Instagram\n        hashtags.\n      </p>\n      <FormikApp />\n    </div>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}